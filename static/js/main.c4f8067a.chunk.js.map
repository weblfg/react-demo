{"version":3,"sources":["store/store.js","views/admin/products/List.js","views/admin/dashboard/index.js","views/error/PageNotFound.js","utils/request.js","utils/auth.js","views/Login/Login.js","views/admin/products/Edit.js","routes/index.js","components/Frams.js","App.js","index.js"],"names":["store","createStore","state","id","name","age","action","type","push","result","forEach","item","index","splice","columns","getState","title","key","dataIndex","render","value","row","size","onClick","dispatch","message","success","Confirm","danger","style","margin","ghost","List","props","data","subscribe","forceUpdate","extra","history","dataSource","this","rowKey","record","Component","PageNotFound","axios","create","timeout","baseURL","interceptors","request","use","config","token","sessionStorage","getItem","headers","Authorization","error","Login","a","url","get","status","setItem","Fragment","className","onFinish","values","console","log","username","passwd","getToken","onFinishFailed","errorInfo","Item","label","placeholder","htmlType","Edit","justify","span","rules","required","width","mainRoutes","path","component","adminRoutes","isShow","icon","TwitterOutlined","exact","WechatOutlined","Header","Layout","Content","Sider","routes","filter","withRouter","mode","defaultSelectedKeys","defaultOpenKeys","height","borderRight","map","route","p","padding","minHeight","children","App","routerProps","to","from","ReactDOM","routeProps","document","getElementById"],"mappings":"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","file":"static/js/main.c4f8067a.chunk.js","sourcesContent":["import { createStore } from 'redux'\r\nfunction notices(state = [{\r\n    id: 1,\r\n    name: '张三',\r\n    age: 22\r\n}, {\r\n    id: 2,\r\n    name: '小明',\r\n    age: 33\r\n}], action) {\r\n    switch (action.type) {\r\n        case 'add':\r\n            state.push(action.result)\r\n            return state;\r\n\r\n        case 'del':\r\n            state.forEach((item, index) => {\r\n                if (item.name === action.result.name) {\r\n                    state.splice(index, 1)\r\n                }\r\n            })\r\n            debugger\r\n            return state\r\n\r\n        default: return state\r\n\r\n    }\r\n}\r\nconst store = createStore(notices)\r\nexport default store;","import store from '../../../store/store'\r\nimport { Button, Card, Table, message } from 'antd'\r\nimport { Component } from 'react'\r\nlet data=store.getState()\r\nconst columns = [{\r\n    title:'序号',\r\n    key:'id',\r\n    dataIndex:'id',\r\n    render:(value,row,index)=>index+1\r\n},{\r\n    id:1,\r\n    title: '姓名',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n}, {\r\n    id:2,\r\n    title: '年龄',\r\n    dataIndex: 'age',\r\n    key: 'age'\r\n}, {\r\n    title: '操作',\r\n    render: (value, row, index) => {\r\n        return (\r\n            <div>\r\n                 <Button size='small' onClick={()=>Confirm(row)} danger >删除</Button>\r\n                <Button style={{ margin: \"0 1rem\" }} size='small' type=\"primary\" ghost > 修改</Button>\r\n            </div>\r\n        )\r\n    }\r\n}]\r\n\r\nfunction Confirm(row) {\r\n    store.dispatch({type:'del',result:row})\r\n    return message.success('删除成功')\r\n}\r\n\r\nclass List extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.data=store.getState()\r\n    }\r\n    componentDidMount(){\r\n        store.subscribe(()=>{\r\n            this.forceUpdate()\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <Card title='商品列表' extra={<Button type='primary' onClick={()=>this.props.history.push('/admin/products/Edit/1')}>新增</Button>}>\r\n                <Table dataSource={[...this.data]} columns={columns}  rowKey={record =>record.name} />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List\r\n","\r\n\r\nfunction index() {\r\n    return (\r\n        <div>\r\n        看板页面\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default index\r\n","import React, { Component } from 'react'\r\n\r\nexport class PageNotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                404页面\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageNotFound\r\n\r\n","import axios from 'axios'\r\nimport { getToken } from './auth'\r\naxios.create({\r\n    timeout: 3000,\r\n    baseURL: 'http://localhost:3000'\r\n})\r\nexport function get(url) {\r\n    return axios.get(url)\r\n}\r\nexport function post(url, data) {\r\n    return axios.post(url, data)\r\n}\r\nexport function put(url, data) {\r\n    return axios.put(url, data)\r\n}\r\naxios.interceptors.request.use(\r\n    config => {\r\n       \r\n        const token = getToken()\r\n        token && (config.headers.Authorization = token);\r\n        return config\r\n    }\r\n    ,\r\n    error => {\r\n        return error\r\n    }\r\n)\r\n","export function getToken(){\r\n    return sessionStorage.getItem('token')\r\n}\r\nexport function setToken(token){\r\n    sessionStorage.setItem('token',token)\r\n}\r\nexport function isLogin(){\r\n    if(sessionStorage.getItem('token')){\r\n        \r\n        return true\r\n    }\r\n    return false\r\n}","import React, { Component } from 'react';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { get } from '../../utils/request'\r\nclass Login extends Component {\r\n    async getToken() {\r\n        let data = await get('1.json')\r\n        if (data.status === 200) {\r\n            sessionStorage.setItem('token', data.data.token)\r\n            this.props.history.push('/admin/products/1')\r\n        }\r\n    }\r\n    render() {\r\n        const onFinish = (values) => {\r\n            console.log('Success:', values);\r\n            if (!!values.username && !!values.passwd) {\r\n                if (values.username === '张三' && values.passwd == 123) {\r\n                    this.getToken()\r\n                }else{\r\n                    message.error('用户名或者密码错误')\r\n                }\r\n            }\r\n            \r\n        };\r\n        const onFinishFailed = (errorInfo) => {\r\n            console.log('Failed:', errorInfo);\r\n        };\r\n        return (\r\n            <React.Fragment>\r\n                <div className='LoginPage'>\r\n                    <Form\r\n                        className='LoginForm'\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed} >\r\n                        <div className='loginIn'>\r\n                            登录\r\n                        </div>\r\n                        <div>\r\n                            <Form.Item label='姓名' name='username'>\r\n                                <Input placeholder='张三' />\r\n                            </Form.Item>\r\n                            <Form.Item label='密码' name='passwd'>\r\n                                <Input placeholder='123' />\r\n                            </Form.Item>\r\n                        </div>\r\n                        <Form.Item>\r\n                            <Button htmlType='submit' type='primary'>Login</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Login;","import store from '../../../store/store'\r\nimport { Form, Card, Input, Row, Col,Button,message } from 'antd'\r\nconst onFinish = (values) => {\r\n    store.dispatch({type:'add',result:values})\r\n    message.success('保存成功')\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\nfunction Edit() {\r\n    return (\r\n        <Card title='商品编辑'>\r\n            <Form \r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n              \r\n            >\r\n                <Row justify=\"space-between\">\r\n                    <Col span={11}>\r\n                        <Form.Item label='姓名' name='name' rules={[{ required: true, message: '请输入用户名!' }]}>\r\n                            <Input placeholder='输入姓名' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label='年龄' name='age' rules={[{ required: true, message: '请输入密码!' }]}>\r\n                            <Input placeholder='输入密码' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Item>\r\n                   <Row justify='center'>\r\n                       <Col span={8}>\r\n                       <Button type='primary'  htmlType=\"submit\" style={{width:'100%'}}>保存</Button>\r\n                       </Col>\r\n                   </Row>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Edit\r\n","import List from '../views/admin/products/List'\r\nimport index from '../views/admin/dashboard'\r\nimport PageNotFound from '../views/error/PageNotFound'\r\nimport Login from '../views/Login/Login'\r\nimport Edit from '../views/admin/products/Edit'\r\nimport {TwitterOutlined,WechatOutlined} from '@ant-design/icons'\r\n// 路由一个是主要的路由，一个是需要验证的路由\r\nexport const mainRoutes = [{\r\n    path: '/Login',\r\n    component:Login\r\n},{\r\n    path:'/404',\r\n    component:PageNotFound\r\n}]\r\nexport const adminRoutes = [{\r\n    path: '/admin/dashboard',\r\n    component:index,\r\n    isShow:true,\r\n    title:'看板',\r\n    icon:<TwitterOutlined />\r\n}, {\r\n    path: '/admin/products',\r\n    component: List,\r\n    exact: true, //精确匹配\r\n    isShow:true,\r\n    title:'商品管理',\r\n    icon:<WechatOutlined />\r\n}, {\r\n    path: '/admin/products/Edit/:id',\r\n    component:Edit,\r\n    exact:true,\r\n    isShow:false\r\n}]\r\n","import { Layout, Menu } from 'antd';\r\nimport { adminRoutes } from '../routes';\r\nimport {withRouter} from 'react-router-dom'\r\nconst { Header, Content, Sider } = Layout;\r\nconst routes=adminRoutes.filter(item=>item.isShow)\r\nfunction Frams(props) {\r\n    return (\r\n        <>\r\n            <Layout className='layout'>\r\n                <Header className=\"header\">\r\n                    <div className=\"logo\" />\r\n                    <div className='title'>React demo</div>\r\n                </Header>\r\n                <Layout>\r\n                    <Sider width={200} className=\"site-layout-background\">\r\n                        <Menu\r\n                            mode=\"inline\"\r\n                            defaultSelectedKeys={['1']}\r\n                            defaultOpenKeys={['sub1']}\r\n                            style={{ height: '100%', borderRight: 0 }}\r\n                        >\r\n                            {routes.map(route=>{\r\n                               return <Menu.Item key={route.path} onClick={p=>props.history.push(p.key)}>\r\n                                  <i>{route.icon}</i>\r\n                                   {route.title}</Menu.Item>\r\n                            })}\r\n                          \r\n                        </Menu>\r\n                    </Sider>\r\n                    <Layout style={{ padding: '0 24px 24px' }}>\r\n                        <Content\r\n                            className=\"site-layout-background\"\r\n                            style={{\r\n                                padding: 24,\r\n                                margin: 0,\r\n                                minHeight: 280,\r\n                            }}\r\n                        >\r\n                            {props.children}\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Frams)\r\n","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { adminRoutes } from './routes'\nimport Frame from './components/Frams'\nimport {isLogin} from './utils/auth'\nimport './App.scss'\nfunction App() {\n  if(isLogin()){\n    return  (\n      <div className='App'>\n       { <Frame>\n        <Switch>\n          {adminRoutes.map(route=>{\n            return <Route key={route.path} exact={route.exact} path={route.path} render={routerProps=>{\n              return <route.component {...routerProps} />\n            }}/>\n          })}\n           <Redirect to={adminRoutes[1].path} from='/admin' />\n          <Redirect to='/404' />\n        </Switch>\n        </Frame>}\n      </div>\n    )\n  }else{\n    return (<Redirect to='/login'/>)\n  }\n  \n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport App from './App';\nimport { mainRoutes } from './routes';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n    <Switch>\n    <Route path='/admin' render={routeProps=><App {...routeProps}/>}/>\n      {mainRoutes.map(route => {\n        return <Route key={route.path} {...route}></Route>\n      })}\n      <Redirect to='/admin' from='/' />\n      <Redirect to='/404'></Redirect>\n    </Switch>\n  </Router>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}